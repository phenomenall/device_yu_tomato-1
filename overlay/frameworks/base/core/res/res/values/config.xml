<?xml version="1.0" encoding="utf-8"?>
<!--
 /*
 ** Copyright 2014, The CyanogenMod Project
 **
 ** Licensed under the Apache License, Version 2.0 (the "License");
 ** you may not use this file except in compliance with the License.
 ** You may obtain a copy of the License at
 **
 **     http://www.apache.org/licenses/LICENSE-2.0
 **
 ** Unless required by applicable law or agreed to in writing, software
 ** distributed under the License is distributed on an "AS IS" BASIS,
 ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ** See the License for the specific language governing permissions and
 ** limitations under the License.
 */
 -->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- Whether cpu boost is enabled for AppLaunch -->
    <bool name="config_enableCpuBoostForAppLaunch">true</bool>
    <integer name="launchboost_timeout_param">2000</integer>
    <integer-array name="launchboost_param_value">
        <item>0x40C00000</item>
        <item>0x00000001</item>
        <item>0x40800000</item>
        <item>0x00000708</item>
        <item>0x40400000</item>
        <item>0x00000001</item>
        <item>0x41000000</item>
        <item>0x00000004</item>
        <item>0x42804000</item>
        <item>0x00000001</item>
    </integer-array>

    <!-- Whether disablepacking is enabled or not -->
    <bool name="config_disablePacking">true</bool>
    <integer name="disablepacking_timeout_param">5000</integer>
    <integer-array name="launchboost_packing_param_value">
        <item>0x40C04000</item>
        <item>0x00000001</item>
        <item>0x40C0C000</item>
        <item>0x00000001</item>
        <item>0x40C14000</item>
        <item>0x00000001</item>
        <item>0x40C10000</item>
        <item>0x00000001</item>
    </integer-array>

    <!-- Whether cpu boost is enabled for animation. -->
    <bool name="config_enablePerfBoostForAnimation">true</bool>
    <integer name="animationboost_timeout_param">600</integer>
    <integer-array name="animationboost_param_value">
        <item>0x40C00000</item>
        <item>0x00000001</item>
        <item>0x40800000</item>
        <item>0x0000044C</item>
        <item>0x42804000</item>
        <item>0x00000001</item>
    </integer-array>

    <!-- Whether cpu boost is enabled for overscroller fling. -->
    <bool name="config_enableCpuBoostForOverScrollerFling">true</bool>
    <integer name="flingboost_timeout_param">0</integer>
    <integer-array name="flingboost_param_value">
        <item>0x40C00000</item>
        <item>0x00000001</item>
        <item>0x40800000</item>
        <item>0x00000708</item>
        <item>0x40C04000</item>
        <item>0x00000001</item>
    </integer-array>

    <!-- Whether cpu boost is enabled for horizontal scroll. -->
    <bool name="config_enableCpuBoostForScroller">true</bool>
    <integer name="scrollboost_timeout_param">0</integer>
    <integer-array name="scrollboost_param_value">
        <item>0x40C00000</item>
        <item>0x00000001</item>
        <item>0x40800000</item>
        <item>0x00000708</item>
        <item>0x40C04000</item>
        <item>0x00000001</item>
    </integer-array>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if LUX == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for LUX levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>9</item>
        <item>30</item>
        <item>100</item>
        <item>325</item>
        <item>1250</item>
        <item>3500</item>
        <item>10000</item>
        <item>20000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>30</item>
        <item>46</item>
        <item>70</item>
        <item>70</item>
        <item>94</item>
        <item>134</item>
        <item>148</item>
        <item>252</item>
        <item>255</item>
    </integer-array>

    <!-- Minimum allowable screen brightness to use in a very dark room.
         This value sets the floor for the darkest possible auto-brightness
         adjustment.  It is expected to be somewhat less than the first entry in
         config_autoBrightnessLcdBacklightValues so as to allow the user to have
         some range of adjustment to dim the screen further than usual in very
         dark rooms. The contents of the screen must still be clearly visible
         in darkness (although they may not be visible in a bright room). -->
    <integer name="config_screenBrightnessDark">3</integer>

    <!-- Minimum screen brightness allowed by the power manager. -->
    <integer name="config_screenBrightnessDim">3</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">3</integer>

    <!-- Flag indicating whether we should enable the automatic brightness in Settings.
                  config_hardware_automatic_brightness_available is not set, so we will use software implementation -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Control the behavior when the user long presses the home button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_longPressOnHomeBehavior">3</integer>

    <!-- Whether device supports double tap to wake -->
    <bool name="config_supportDoubleTapWake">true</bool>

    <!-- Enable doze mode
         ComponentName of a dream to show whenever the system would otherwise have gone to sleep. -->
    <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDoze">10</integer>

    <!-- If true, the doze component is not started until after the screen has been
          turned off and the screen off animation has been performed. -->
    <bool name="config_dozeAfterScreenOff">true</bool>

    <!-- Power Management: Specifies whether to decouple the interactive state of the
         device from the display on/off state.
         When false, setInteractive(..., true) will be called before the display is turned on
         and setInteractive(..., false) will be called after the display is turned off.
         This mode provides best compatibility for devices that expect the interactive
         state to be tied to the display state.
         When true, setInteractive(...) will be called independently of whether the display
         is being turned on or off.  This mode enables the power manager to reduce
         clocks and disable the touch controller while the display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to power.h for details. -->
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/system/framework/arm64/boot-framework.oat"</item>
        <item>"/system/framework/oat/arm64/services.odex"</item>
        <item>"/system/framework/arm64/boot.oat"</item>
        <item>"/system/framework/arm64/boot-core-libart.oat"</item>
        <item>"/data/dalvik-cache/arm64/system@framework@boot.oat"</item>
        <item>"/data/dalvik-cache/arm64/system@framework@services.jar@classes.dex"</item>
   </string-array>

    <!-- Flag specifying whether VoLTE is available on device -->
    <bool name="config_device_volte_available">true</bool>

    <!-- Flag specifying whether VoLTE should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_volte_available">true</bool>

    <!-- Flag specifying whether VT is available on device -->
    <bool name="config_device_vt_available">true</bool>

    <!-- Flag specifying whether VT should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_vt_available">true</bool>

    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently
         in hardware. -->
    <bool name="config_setColorTransformAccelerated">true</bool>

    <bool name="config_enableKeyHandler">true</bool>

    <!-- Keycodes of gestures. If the gesture is not supported set it to 0. -->
    <integer name="config_drawOKeyCode">253</integer>
    <integer name="config_drawWKeyCode">0</integer>
    <integer name="config_drawMKeyCode">0</integer>
    <integer name="config_oneFingerSwipeRightKeyCode">251</integer>
    <integer name="config_oneFingerSwipeLeftKeyCode">250</integer>
    <integer name="config_oneFingerSwipeDownKeyCode">249</integer>
    <integer name="config_oneFingerSwipeUpKeyCode">254</integer>

    <!-- Default settings for gestures
            0 - Disabled
            1 - Wake device
            2 - Toggle flashlight
            3 - Toggle airplane mode
            4 - Play/Pause music
            5 - Next music
            6 - Previous music
            7 - Open camera
            8 - Open dialer -->

    <integer name="config_drawODefault">2</integer>
    <integer name="config_drawMDefault">7</integer>
    <integer name="config_drawWDefault">7</integer>
    <integer name="config_oneFingerSwipeUpDefault">8</integer>
    <integer name="config_oneFingerSwipeRightDefault">6</integer>
    <integer name="config_oneFingerSwipeDownDefault">4</integer>
    <integer name="config_oneFingerSwipeLeftDefault">5</integer>
</resources>
